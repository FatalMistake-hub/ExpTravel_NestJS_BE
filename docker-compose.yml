version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: exptravel_app
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start:dev
    env_file:
      - .env.development
    environment:
      NODE_ENV: development
      PORT: 3000
      SECRET: HAD_12X#@
      JWT_ACCESS_SECRET: HAD_12Xsdsd@@
      JWT_REFRESH_SECRET: HAD_12Xfavbs##@
      DB_HOST: postgres
      DB_PORT: 5432
      USERNAME: postgres
      PASSWORD: postgres
      DB_NAME: exptravel
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - '3000:3000'
    depends_on:
      - postgres
      - redis
  postgres:
    image: postgres:14-alpine
    restart: always
    container_name: exptravel_postgres
    env_file:
      - .env.development
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: exptravel
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis:6.2-alpine
    container_name: redis_server
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: always
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - backend_network
    ports:
      - '5050:80'
    depends_on:
      - postgres
networks:
  backend_network:
    driver: bridge
volumes:
  redis_data:
    driver: local
  postgres_data:
