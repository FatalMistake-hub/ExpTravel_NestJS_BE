import { MigrationInterface, QueryRunner } from "typeorm";

export class InitDb1736330025064 implements MigrationInterface {
    name = 'InitDb1736330025064'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "users" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "userId" uuid NOT NULL DEFAULT uuid_generate_v4(), "userName" character varying(30) NOT NULL, "userEmail" character varying NOT NULL, "description" character varying, "address" character varying, "isWallet" boolean NOT NULL DEFAULT false, "phoneNumber" character varying, "language" character varying, "urlImage" character varying, "userPassword" character varying NOT NULL, "role" character varying NOT NULL DEFAULT 'USER', "accountAuthorize" character varying, "isEnabled" boolean NOT NULL DEFAULT true, CONSTRAINT "UQ_226bb9aa7aa8a69991209d58f59" UNIQUE ("userName"), CONSTRAINT "UQ_9047b2d58f91586f14f0cf44a45" UNIQUE ("userEmail"), CONSTRAINT "PK_8bf09ba754322ab9c22a215c919" PRIMARY KEY ("userId"))`);
        await queryRunner.query(`CREATE TABLE "refresh_tokens" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "refreshTokenId" uuid NOT NULL DEFAULT uuid_generate_v4(), "user_id" uuid NOT NULL, "token" character varying NOT NULL, "expireDate" TIMESTAMP NOT NULL, "isValid" boolean NOT NULL DEFAULT true, CONSTRAINT "UQ_4542dd2f38a61354a040ba9fd57" UNIQUE ("token"), CONSTRAINT "PK_f44e7626d50b9c250cc519cb101" PRIMARY KEY ("refreshTokenId"))`);
        await queryRunner.query(`CREATE TABLE "image_details" ("imageId" uuid NOT NULL DEFAULT uuid_generate_v4(), "link" character varying NOT NULL, "tour_id" bigint NOT NULL, CONSTRAINT "PK_ca0e0a7cf73961028abd5dff0b8" PRIMARY KEY ("imageId"))`);
        await queryRunner.query(`CREATE TABLE "tours" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "tour_id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL, "title" character varying, "rating" double precision NOT NULL, "city" character varying NOT NULL, "price_one_person" integer NOT NULL, "image_main" character varying NOT NULL, "working" character varying NOT NULL, "latitude" double precision NOT NULL, "longitude" double precision NOT NULL, "time_slot_length" integer NOT NULL, "check_in" TIMESTAMP NOT NULL, "check_out" TIMESTAMP NOT NULL, "destination" character varying NOT NULL, "destination_description" character varying NOT NULL, "is_deleted" boolean NOT NULL DEFAULT false, "user_id" uuid NOT NULL, CONSTRAINT "PK_0c1435e4206fc101c7477a4cc98" PRIMARY KEY ("tour_id"))`);
        await queryRunner.query(`CREATE TABLE "categories" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "category_id" SERIAL NOT NULL, "category_name" character varying NOT NULL, "image_link" character varying NOT NULL, CONSTRAINT "PK_51615bef2cea22812d0dcab6e18" PRIMARY KEY ("category_id"))`);
        await queryRunner.query(`CREATE TABLE "tour_category" ("tour_id" bigint NOT NULL, "category_id" integer NOT NULL, CONSTRAINT "PK_e749c379c58f12b3f096dc5c6ae" PRIMARY KEY ("tour_id", "category_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_8f7342a004d790b6987435ca6b" ON "tour_category" ("tour_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_03acc4b520fac784046c429b9e" ON "tour_category" ("category_id") `);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" ADD CONSTRAINT "FK_3ddc983c5f7bcf132fd8732c3f4" FOREIGN KEY ("user_id") REFERENCES "users"("userId") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "image_details" ADD CONSTRAINT "FK_76be59dd5323be29c9d0eae05fe" FOREIGN KEY ("tour_id") REFERENCES "tours"("tour_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tours" ADD CONSTRAINT "FK_57db54d555b206eeb973828ffa6" FOREIGN KEY ("user_id") REFERENCES "users"("userId") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tour_category" ADD CONSTRAINT "FK_8f7342a004d790b6987435ca6b2" FOREIGN KEY ("tour_id") REFERENCES "tours"("tour_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "tour_category" ADD CONSTRAINT "FK_03acc4b520fac784046c429b9eb" FOREIGN KEY ("category_id") REFERENCES "categories"("category_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "tour_category" DROP CONSTRAINT "FK_03acc4b520fac784046c429b9eb"`);
        await queryRunner.query(`ALTER TABLE "tour_category" DROP CONSTRAINT "FK_8f7342a004d790b6987435ca6b2"`);
        await queryRunner.query(`ALTER TABLE "tours" DROP CONSTRAINT "FK_57db54d555b206eeb973828ffa6"`);
        await queryRunner.query(`ALTER TABLE "image_details" DROP CONSTRAINT "FK_76be59dd5323be29c9d0eae05fe"`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" DROP CONSTRAINT "FK_3ddc983c5f7bcf132fd8732c3f4"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_03acc4b520fac784046c429b9e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8f7342a004d790b6987435ca6b"`);
        await queryRunner.query(`DROP TABLE "tour_category"`);
        await queryRunner.query(`DROP TABLE "categories"`);
        await queryRunner.query(`DROP TABLE "tours"`);
        await queryRunner.query(`DROP TABLE "image_details"`);
        await queryRunner.query(`DROP TABLE "refresh_tokens"`);
        await queryRunner.query(`DROP TABLE "users"`);
    }

}
